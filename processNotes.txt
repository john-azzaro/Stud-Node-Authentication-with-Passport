Authentication with Passport Process Notes
==========================================

PHASE 0: Setup
===============
1. "npm init" to store dependencies
2. Install dependencies as needed
    * express   --  node application framework for building web apps
    * ejs       --  template engine
3. Add .gitignore file and exclude node_modules
4. Add development dependencies:
    * nodemon  -- restart server automatically
    * dotenv   -- allows enviroment variables to be stored in an dotenv file that can be loaded into server (like secret information)
5. Setup package.json to setup server in scripts.
    "devStart": "nodemon server.js"
    * test by running "npm run devStart"... you should see the following if it works:
    --------------------------------------------------------------------
    [nodemon] 1.19.2
    [nodemon] to restart at any time, enter `rs`
    [nodemon] watching dir(s): *.*
    [nodemon] starting `node server.js`
    [nodemon] clean exit - waiting for changes before restart
    --------------------------------------------------------------------



PHASE 1: Setup basic server functionality
=========================================
1. import express
    ----------------------------------
    const express = require('express');
    ----------------------------------
2. get app variable from express:
    ------------------------------------
    const app = express();
    ------------------------------------
3. Create app.listen to listen for client requests on port 3000 or any env stipulation.
    -------------------------------------------------------------------------------------
    app.listen(process.env.PORT || 3000, function() {
        console.log(`Your app is listening on ${process.env.PORT || 3000}...`);
    });
    -------------------------------------------------------------------------------------



PHASE 2: Setup basic routes
============================
First, We need to make a home page that will be accessible to us when we are logged in.

---------------------------------------------
app.get('/', function(req, res) {                  // Home page route (that you need to be logged into to get to)
    res.render('index.ejs');                       // The response will be to render a "index.ejs" page.
});
---------------------------------------------



PHASE 3: Create a "views" folder
=================================
1. First, create a "views" folder that will hold your pages.
2. Second, create a "index.ejs" to render as a response to the user GET request.
3. Third, in your index.ejs file, write a peice of test code and go to your localhost:3000 to see if everything is connected properly.

PHASE 4: Using ejs syntax
===========================
4. To use ejs syntax, we need to tell the server to use ejs syntax (but remember to check and see if you installed the ejs dependency 
in case it does not intially work).  Once this is doen you can use ejs in your templates.
-------------------------------------------
app.set('view-engine', 'ejs');
-------------------------------------------

-- To test the ejs system, you can try passing a object with a property comprised of a name and a value (i.e. Joe).
----------------------------------------------
app.get('/', function(req, res) { 
    res.render('index.ejs', { name: 'joe'});        <== user object with the name joe.
});

----------------------------------------------

Then, in your index.ejs template render out the variable with " <%= %> " and the name in the middle (i.e. <%= name %>)
-----------------------------------------
<h1>Hello there <%= name %></h1>                  ==> Hello there Joe
-----------------------------------------


PHASE 4: Setup the registration and login screens
=================================================

1. First, create pages for login and registration screens
    * Create a view file named login.ejs
    * Create a view file named register.ejs
2. Second, create your routes for the login and registration.
    For this step, you simply need to put in the code for rendering like we did for the home page but with the respective view.
--------------------------------------------------
app.get('/login', function (req, res) {
    res.render('login.ejs');
});
app.get('/registration', function (req, res) {
    res.render('registration');
});
--------------------------------------------------



